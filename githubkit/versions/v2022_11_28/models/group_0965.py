"""DO NOT EDIT THIS FILE!

This file is automatically @generated by githubkit using the follow command:

bash ./scripts/run-codegen.sh

See https://github.com/github/rest-api-description for more information.
"""

from __future__ import annotations

from typing import Literal, Union

from pydantic import Field

from githubkit.compat import GitHubModel, model_rebuild
from githubkit.typing import Missing
from githubkit.utils import UNSET

from .group_0133 import RepositoryRulesetBypassActor
from .group_0142 import OrgRulesetConditionsOneof0
from .group_0143 import OrgRulesetConditionsOneof1
from .group_0144 import OrgRulesetConditionsOneof2
from .group_0145 import (
    RepositoryRuleCreation,
    RepositoryRuleDeletion,
    RepositoryRuleNonFastForward,
    RepositoryRuleRequiredSignatures,
)
from .group_0146 import RepositoryRuleUpdate
from .group_0148 import RepositoryRuleRequiredLinearHistory
from .group_0151 import RepositoryRuleRequiredDeployments
from .group_0154 import RepositoryRulePullRequest
from .group_0156 import RepositoryRuleRequiredStatusChecks
from .group_0158 import RepositoryRuleCommitMessagePattern
from .group_0160 import RepositoryRuleCommitAuthorEmailPattern
from .group_0162 import RepositoryRuleCommitterEmailPattern
from .group_0164 import RepositoryRuleBranchNamePattern
from .group_0166 import RepositoryRuleTagNamePattern
from .group_0168 import RepositoryRuleFilePathRestriction
from .group_0170 import RepositoryRuleMaxFilePathLength
from .group_0172 import RepositoryRuleFileExtensionRestriction
from .group_0174 import RepositoryRuleMaxFileSize
from .group_0177 import RepositoryRuleWorkflows
from .group_0179 import RepositoryRuleCodeScanning


class OrgsOrgRulesetsPostBody(GitHubModel):
    """OrgsOrgRulesetsPostBody"""

    name: str = Field(description="The name of the ruleset.")
    target: Missing[Literal["branch", "tag", "push", "repository"]] = Field(
        default=UNSET, description="The target of the ruleset"
    )
    enforcement: Literal["disabled", "active", "evaluate"] = Field(
        description="The enforcement level of the ruleset. `evaluate` allows admins to test rules before enforcing them. Admins can view insights on the Rule Insights page (`evaluate` is only available with GitHub Enterprise)."
    )
    bypass_actors: Missing[list[RepositoryRulesetBypassActor]] = Field(
        default=UNSET,
        description="The actors that can bypass the rules in this ruleset",
    )
    conditions: Missing[
        Union[
            OrgRulesetConditionsOneof0,
            OrgRulesetConditionsOneof1,
            OrgRulesetConditionsOneof2,
        ]
    ] = Field(
        default=UNSET,
        title="Organization ruleset conditions",
        description="Conditions for an organization ruleset.\nThe branch and tag rulesets conditions object should contain both `repository_name` and `ref_name` properties, or both `repository_id` and `ref_name` properties, or both `repository_property` and `ref_name` properties.\nThe push rulesets conditions object does not require the `ref_name` property.\nFor repository policy rulesets, the conditions object should only contain the `repository_name`, the `repository_id`, or the `repository_property`.",
    )
    rules: Missing[
        list[
            Union[
                RepositoryRuleCreation,
                RepositoryRuleUpdate,
                RepositoryRuleDeletion,
                RepositoryRuleRequiredLinearHistory,
                RepositoryRuleRequiredDeployments,
                RepositoryRuleRequiredSignatures,
                RepositoryRulePullRequest,
                RepositoryRuleRequiredStatusChecks,
                RepositoryRuleNonFastForward,
                RepositoryRuleCommitMessagePattern,
                RepositoryRuleCommitAuthorEmailPattern,
                RepositoryRuleCommitterEmailPattern,
                RepositoryRuleBranchNamePattern,
                RepositoryRuleTagNamePattern,
                RepositoryRuleFilePathRestriction,
                RepositoryRuleMaxFilePathLength,
                RepositoryRuleFileExtensionRestriction,
                RepositoryRuleMaxFileSize,
                RepositoryRuleWorkflows,
                RepositoryRuleCodeScanning,
            ]
        ]
    ] = Field(default=UNSET, description="An array of rules within the ruleset.")


model_rebuild(OrgsOrgRulesetsPostBody)

__all__ = ("OrgsOrgRulesetsPostBody",)
