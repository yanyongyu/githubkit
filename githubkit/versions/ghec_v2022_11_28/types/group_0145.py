"""DO NOT EDIT THIS FILE!

This file is automatically @generated by githubkit using the follow command:

bash ./scripts/run-codegen.sh

See https://github.com/github/rest-api-description for more information.
"""

from __future__ import annotations

from datetime import datetime
from typing import Literal, Union
from typing_extensions import NotRequired, TypedDict

from .group_0089 import RepositoryRulesetBypassActorType
from .group_0094 import RepositoryRulesetConditionsType
from .group_0104 import (
    RepositoryRuleCreationType,
    RepositoryRuleDeletionType,
    RepositoryRuleNonFastForwardType,
    RepositoryRuleRequiredSignaturesType,
)
from .group_0105 import RepositoryRuleUpdateType
from .group_0107 import RepositoryRuleRequiredLinearHistoryType
from .group_0108 import RepositoryRuleRequiredDeploymentsType
from .group_0111 import RepositoryRulePullRequestType
from .group_0113 import RepositoryRuleRequiredStatusChecksType
from .group_0115 import RepositoryRuleCommitMessagePatternType
from .group_0117 import RepositoryRuleCommitAuthorEmailPatternType
from .group_0119 import RepositoryRuleCommitterEmailPatternType
from .group_0121 import RepositoryRuleBranchNamePatternType
from .group_0123 import RepositoryRuleTagNamePatternType
from .group_0125 import RepositoryRuleFilePathRestrictionType
from .group_0127 import RepositoryRuleMaxFilePathLengthType
from .group_0129 import RepositoryRuleFileExtensionRestrictionType
from .group_0131 import RepositoryRuleMaxFileSizeType
from .group_0134 import RepositoryRuleWorkflowsType
from .group_0136 import RepositoryRuleCodeScanningType
from .group_0140 import OrgRulesetConditionsOneof0Type
from .group_0141 import OrgRulesetConditionsOneof1Type
from .group_0142 import OrgRulesetConditionsOneof2Type
from .group_0143 import RepositoryRuleMergeQueueType


class RepositoryRulesetType(TypedDict):
    """Repository ruleset

    A set of rules to apply when specified conditions are met.
    """

    id: int
    name: str
    target: NotRequired[Literal["branch", "tag", "push", "repository"]]
    source_type: NotRequired[Literal["Repository", "Organization", "Enterprise"]]
    source: str
    enforcement: Literal["disabled", "active", "evaluate"]
    bypass_actors: NotRequired[list[RepositoryRulesetBypassActorType]]
    current_user_can_bypass: NotRequired[
        Literal["always", "pull_requests_only", "never"]
    ]
    node_id: NotRequired[str]
    links: NotRequired[RepositoryRulesetPropLinksType]
    conditions: NotRequired[
        Union[
            RepositoryRulesetConditionsType,
            OrgRulesetConditionsOneof0Type,
            OrgRulesetConditionsOneof1Type,
            OrgRulesetConditionsOneof2Type,
            None,
        ]
    ]
    rules: NotRequired[
        list[
            Union[
                RepositoryRuleCreationType,
                RepositoryRuleUpdateType,
                RepositoryRuleDeletionType,
                RepositoryRuleRequiredLinearHistoryType,
                RepositoryRuleMergeQueueType,
                RepositoryRuleRequiredDeploymentsType,
                RepositoryRuleRequiredSignaturesType,
                RepositoryRulePullRequestType,
                RepositoryRuleRequiredStatusChecksType,
                RepositoryRuleNonFastForwardType,
                RepositoryRuleCommitMessagePatternType,
                RepositoryRuleCommitAuthorEmailPatternType,
                RepositoryRuleCommitterEmailPatternType,
                RepositoryRuleBranchNamePatternType,
                RepositoryRuleTagNamePatternType,
                RepositoryRuleFilePathRestrictionType,
                RepositoryRuleMaxFilePathLengthType,
                RepositoryRuleFileExtensionRestrictionType,
                RepositoryRuleMaxFileSizeType,
                RepositoryRuleWorkflowsType,
                RepositoryRuleCodeScanningType,
            ]
        ]
    ]
    created_at: NotRequired[datetime]
    updated_at: NotRequired[datetime]


class RepositoryRulesetPropLinksType(TypedDict):
    """RepositoryRulesetPropLinks"""

    self_: NotRequired[RepositoryRulesetPropLinksPropSelfType]
    html: NotRequired[Union[RepositoryRulesetPropLinksPropHtmlType, None]]


class RepositoryRulesetPropLinksPropSelfType(TypedDict):
    """RepositoryRulesetPropLinksPropSelf"""

    href: NotRequired[str]


class RepositoryRulesetPropLinksPropHtmlType(TypedDict):
    """RepositoryRulesetPropLinksPropHtml"""

    href: NotRequired[str]


__all__ = (
    "RepositoryRulesetPropLinksPropHtmlType",
    "RepositoryRulesetPropLinksPropSelfType",
    "RepositoryRulesetPropLinksType",
    "RepositoryRulesetType",
)
