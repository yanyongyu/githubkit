[tool.poetry]
name = "GitHubKit"
version = "0.11.0a0"
description = "GitHub SDK for Python"
authors = ["yanyongyu <yyy@yyydl.top>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/yanyongyu/githubkit"
repository = "https://github.com/yanyongyu/githubkit"
documentation = "https://github.com/yanyongyu/githubkit"
keywords = ["github", "octokit"]
include = ["githubkit/py.typed"]

[tool.poetry.dependencies]
python = "^3.8"
hishel = "^0.0.20"
httpx = ">=0.23.0, <1.0.0"
typing-extensions = "^4.3.0"
pydantic = ">=2.0.0, <3.0.0, !=2.5.0, !=2.5.1"
anyio = { version = "^3.6.1", optional = true }
PyJWT = { version = "^2.4.0", extras = ["crypto"], optional = true }

[tool.poetry.group.dev.dependencies]
tomli = "^2.0.1"
ruff = "^0.1.0"
isort = "^5.10.1"
black = "^23.1.0"
Jinja2 = "^3.1.2"
nonemoji = "^0.1.2"
jsonpointer = "^2.3"
pre-commit = "^3.0.0"
openapi-pydantic = "^0.3.2"

[tool.poetry.extras]
jwt = ["PyJWT"]
auth-app = ["PyJWT"]
auth-oauth-device = ["anyio"]
auth = ["PyJWT", "anyio"]
all = ["PyJWT", "anyio"]

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311"]
include = '\.pyi?$'
extend-exclude = '''
'''

[tool.isort]
profile = "black"
line_length = 88
length_sort = true
skip_gitignore = true
force_sort_within_sections = true
extra_standard_library = ["typing_extensions"]

[tool.ruff]
select = ["E", "W", "F", "UP", "C", "T", "PYI", "PT", "Q"]
ignore = ["E402", "C901", "UP037"]
extend-exclude = ["githubkit/rest/", "githubkit/webhooks/"]

line-length = 88
target-version = "py38"

[tool.pyright]
typeCheckingMode = "basic"
reportPrivateImportUsage = false
reportShadowedImports = false
disableBytesTypePromotions = true

pythonPlatform = "All"
executionEnvironments = [
  { root = "./codegen", pythonVersion = "3.10" },
  { root = "./", pythonVersion = "3.8", extraPaths = [
    "./",
  ] },
]


[[tool.codegen.rest]]
version = "2022-11-28"
description_source = "https://raw.githubusercontent.com/github/rest-api-description/main/descriptions-next/api.github.com/api.github.com.2022-11-28.json"
output_dir = "githubkit/rest/"

[tool.codegen.rest.schema_overrides]
# enhancement: issue timeline discriminator
"/components/schemas/labeled-issue-event/properties/event" = { const = "labeled" }
"/components/schemas/unlabeled-issue-event/properties/event" = { const = "unlabeled" }
"/components/schemas/milestoned-issue-event/properties/event" = { const = "milestoned" }
"/components/schemas/demilestoned-issue-event/properties/event" = { const = "demilestoned" }
"/components/schemas/renamed-issue-event/properties/event" = { const = "renamed" }
"/components/schemas/review-requested-issue-event/properties/event" = { const = "review_requested" }
"/components/schemas/review-request-removed-issue-event/properties/event" = { const = "review_request_removed" }
"/components/schemas/review-dismissed-issue-event/properties/event" = { const = "review_dismissed" }
"/components/schemas/locked-issue-event/properties/event" = { const = "locked" }
"/components/schemas/added-to-project-issue-event/properties/event" = { const = "added_to_project" }
"/components/schemas/moved-column-in-project-issue-event/properties/event" = { const = "moved_columns_in_project" }
"/components/schemas/removed-from-project-issue-event/properties/event" = { const = "removed_from_project" }
"/components/schemas/converted-note-to-issue-issue-event/properties/event" = { const = "converted_note_to_issue" }
"/components/schemas/timeline-comment-event/properties/event" = { const = "commented" }
"/components/schemas/timeline-cross-referenced-event/properties/event" = { const = "cross-referenced" }
"/components/schemas/timeline-committed-event/properties/event" = { const = "committed" }
"/components/schemas/timeline-reviewed-event/properties/event" = { const = "reviewed" }
"/components/schemas/timeline-line-commented-event/properties/event" = { const = "line_commented" }
"/components/schemas/timeline-commit-commented-event/properties/event" = { const = "commit_commented" }
"/components/schemas/timeline-assigned-issue-event/properties/event" = { const = "assigned" }
"/components/schemas/timeline-unassigned-issue-event/properties/event" = { const = "unassigned" }

# https://github.com/github/rest-api-description/issues/1639
"/components/schemas/issue/properties/body_text" = { type = ["string", "null"] }
"/components/schemas/issue/properties/body_html" = { type = ["string", "null"] }
"/components/schemas/timeline-reviewed-event/properties/body_text" = { type = [
  "string",
  "null",
] }
"/components/schemas/timeline-reviewed-event/properties/body_html" = { type = [
  "string",
  "null",
] }
"/components/schemas/release/properties/body_text" = { type = [
  "string",
  "null",
] }
"/components/schemas/release/properties/body_html" = { type = [
  "string",
  "null",
] }


# https://github.com/github/rest-api-description/issues/1811
# https://github.com/yanyongyu/githubkit/issues/64
"/components/schemas/pull-request-simple/properties/head/properties/label" = { type = [
  "string",
  "null",
] }
"/components/schemas/pull-request-simple/properties/head/properties/repo" = { anyOf = [
  { type = "null" },
  { "$ref" = "#/components/schemas/repository" },
], "$ref" = "<unset>" }
# https://github.com/yanyongyu/githubkit/issues/56
"/components/schemas/pull-request/properties/head/properties/label" = { type = [
  "string",
  "null",
] }
"/components/schemas/pull-request/properties/head/properties/user" = { type = [
  "object",
  "null",
] }

# https://github.com/github/rest-api-description/issues/1812
"/components/schemas/pull-request-simple/properties/labels/items/properties/description" = { type = [
  "string",
  "null",
] }

# https://github.com/github/rest-api-description/issues/621
"/components/schemas/repository/properties/temp_clone_token" = { type = [
  "string",
  "null",
] }
"/components/schemas/repository/properties/template_repository/properties/temp_clone_token" = { type = [
  "string",
  "null",
] }
"/components/schemas/minimal-repository/properties/temp_clone_token" = { type = [
  "string",
  "null",
] }
"/components/schemas/team-repository/properties/temp_clone_token" = { type = [
  "string",
  "null",
] }
"/components/schemas/pull-request/properties/head/properties/repo/properties/temp_clone_token" = { type = [
  "string",
  "null",
] }
"/components/schemas/pull-request/properties/base/properties/repo/properties/temp_clone_token" = { type = [
  "string",
  "null",
] }
"/components/schemas/repo-search-result-item/properties/temp_clone_token" = { type = [
  "string",
  "null",
] }

# https://github.com/github/rest-api-description/issues/2491
"/components/schemas/auto-merge/properties/commit_title" = { type = [
  "string",
  "null",
] }
"/components/schemas/auto-merge/properties/commit_message" = { type = [
  "string",
  "null",
] }

# https://github.com/github/rest-api-description/issues/2496
"/paths/~1repos~1{owner}~1{repo}~1releases/post/requestBody/content/application~1json/schema/properties/make_latest" = { default = "true" }
"/paths/~1repos~1{owner}~1{repo}~1releases~1{release_id}/patch/requestBody/content/application~1json/schema/properties/make_latest" = { default = "true" }

# https://github.com/github/rest-api-description/issues/2507
"/components/schemas/organization-full/properties/company" = { type = [
  "string",
  "null",
] }
"/components/schemas/organization-full/properties/email" = { type = [
  "string",
  "null",
] }
"/components/schemas/organization-full/properties/location" = { type = [
  "string",
  "null",
] }
"/components/schemas/organization-full/properties/name" = { type = [
  "string",
  "null",
] }
"/components/schemas/organization-full/properties/blog" = { type = [
  "string",
  "null",
] }
"/components/schemas/team-organization/properties/company" = { type = [
  "string",
  "null",
] }
"/components/schemas/team-organization/properties/email" = { type = [
  "string",
  "null",
] }
"/components/schemas/team-organization/properties/location" = { type = [
  "string",
  "null",
] }
"/components/schemas/team-organization/properties/name" = { type = [
  "string",
  "null",
] }
"/components/schemas/team-organization/properties/blog" = { type = [
  "string",
  "null",
] }

# [FIXED] copilot-seat-details/assignee is not valid
# "/components/schemas/copilot-seat-details/properties/assignee" = { enum = "<unset>", oneOf = [
#   { "$ref" = "#/components/schemas/simple-user" },
#   { "$ref" = "#/components/schemas/team" },
#   { "$ref" = "#/components/schemas/organization" },
# ] }

[tool.codegen.webhook]
schema_source = "https://unpkg.com/@octokit/webhooks-schemas/schema.json"
output = "githubkit/webhooks/models.py"
types_output = "githubkit/webhooks/types.py"

[tool.codegen.webhook.schema_overrides]
# webhook installation created requester can be null
# https://github.com/yanyongyu/githubkit/issues/14
# https://docs.github.com/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#installation
"/definitions/installation$created/properties/requester" = { anyOf = [
  { type = "null" },
  { "$ref" = "#/definitions/user" },
], "$ref" = {} }

# https://github.com/github/rest-api-description/issues/2491
"/definitions/auto-merge/properties/commit_title" = { type = [
  "string",
  "null",
] }
"/definitions/auto-merge/properties/commit_message" = { type = [
  "string",
  "null",
] }

# [FIXED] https://github.com/octokit/webhooks/issues/806
# "/definitions/secret_scanning_alert$resolved/properties/alert/allOf/1/properties/resolution" = { enum = ["false_positive", "wont_fix", "revoked", "used_in_tests"] }

# https://github.com/yanyongyu/githubkit/pull/69
"/definitions/projects_v2_item$edited/properties/changes/properties/field_value/properties/field_type" = { enum = [
  "single_select",
  "date",
  "number",
  "text",
  "iteration",
  "labels",
] }

[tool.codegen.field_overrides]
"+1" = "plus_one"
"-1" = "minus_one"


[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
